---
- name: System dependencies installed
  hosts: webservers
  become: true
  tasks:
  - name: Install system dependencies
    package:
      name:
      - nginx
      - postgresql

- name: SSL certificate installed
  hosts: webservers
  become: true
  vars:
    certbot_auto_renew_user: juanlu
    certbot_create_if_missing: true
    certbot_create_method: standalone
    certbot_admin_email: "{{ certbot_email }}"
    certbot_certs:
      - domains:
          - "{{ domain }}"
  roles:
  - role: geerlingguy.certbot
    when: skip_ssl|default(false)|bool != true

- name: Takahe checked out
  hosts: webservers
  become: true
  tasks:
  - name: Clone Takahe source
    git:
      repo: 'https://github.com/jointakahe/takahe.git'
      dest: "{{ checkout_path }}"
      version: '0.6.0'

- name: Dependencies installed
  hosts: webservers
  become: true
  tasks:
  - name: Install system requirements
    package:
      name:
      - gcc
      - libc6-dev
      - libpq-dev
      - python3
      - python3-dev
      - python3-venv
  - name: Install Python requirements
    pip:
      requirements: "{{ checkout_path }}/requirements.txt"
      virtualenv: "{{ venv_path }}"
      virtualenv_command: 'python3 -m venv'

- name: Database ready
  hosts: webservers
  tasks:
  - name: Install system requirements
    become: true
    package:
      name:
      - python3-psycopg2
  # See https://stackoverflow.com/a/39394098/554319
  - name: install setfacl support
    become: true
    apt: pkg=acl
    when: ansible_os_family == 'Debian'
  - name: Create database
    become: true
    become_user: postgres
    community.postgresql.postgresql_db:
      name: takahe
  - name: Create user
    become: true
    become_user: postgres
    community.postgresql.postgresql_user:
      db: takahe
      name: "{{ db_user }}"
      password: "{{ db_password }}"

- name: Takahe ready
  hosts: webservers
  become: true
  tasks:
  - name: Run collectstatic
    environment:
      TAKAHE_DATABASE_SERVER: "postgres://x@example.com/x"
    community.general.django_manage:
      command: collectstatic
      project_path: "{{ checkout_path }}"
      virtualenv: "{{ venv_path }}"
  - name: Create database tables
    environment:
      # See https://stackoverflow.com/a/23361849/554319
      TAKAHE_DATABASE_SERVER: "postgres://{{ db_user }}:{{ db_password | urlencode }}@localhost:5432/takahe"
    community.general.django_manage:
      command: migrate
      project_path: "{{ checkout_path }}"
      virtualenv: "{{ venv_path }}"
  - name: Create Takahe configuration
    template:
      src: takahe.j2
      dest: /etc/takahe

- name: Takahe services created
  hosts: webservers
  become: true
  tasks:
  - name: Create web service
    template:
      src: gunicorn.service.j2
      dest: /etc/systemd/system/gunicorn.service
      validate: "grep {{ venv_path }} %s"
  - name: Create stator service
    template:
      src: takahe-stator.service.j2
      dest: /etc/systemd/system/takahe-stator.service
      validate: "grep {{ venv_path }} %s"
  - name: Create socket
    template:
      src: gunicorn.socket
      dest: /etc/systemd/system/gunicorn.socket
  - name: Configure Nginx
    template:
      src: "{{ 'nginx_http.conf.j2' if skip_ssl|default(false)|bool == true else 'nginx.conf.j2' }}"
      dest: /etc/nginx/nginx.conf
  - name: Start socket
    systemd:
      name: gunicorn.socket
      state: started
      enabled: yes
  - name: Start web service
    systemd:
      name: gunicorn.service
      state: restarted
      enabled: yes
  - name: Start stator service
    systemd:
      name: takahe-stator.service
      state: restarted
      enabled: yes
  - name: Start Nginx
    systemd:
      name: nginx.service
      state: restarted
      enabled: yes
